name: Release

on:
  push:
    branches:
      - release

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - run: pnpm install

      # echo "//registry.npmjs.org/:_authToken=$ {{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - run: |
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          RELEASE_DESCRIPTION=$(awk '/## \[Unreleased\]/{flag=1; next} /## \[/{flag=0} flag' ./CHANGELOG.md | sed '/^[[:space:]]*$/d')
          if echo "$RELEASE_DESCRIPTION" | grep -q '### Changed'; then
              pnpm version major
          elif echo "$RELEASE_DESCRIPTION" | grep -q '### Added'; then
              pnpm version minor
          elif echo "$RELEASE_DESCRIPTION" | grep -q '### Fixed'; then
              pnpm version patch
          fi
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "UNRELEASED_SECTION<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # - run: pnpm publish --access public

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Release ${{ env.TAG_NAME }}"
          body: ${{ env.RELEASE_DESCRIPTION }}
          draft: false
          prerelease: false
